<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Cache\Cache;

/**
 * Implements hook_decoupled_df_format_alter().
 */
function vactory_jsonapi_cross_bundles_decoupled_df_format_alter(&$value, &$info, &$cacheability) {
  if ($info['type'] === 'json_api_cross_bundles' && !empty($value)) {
    $value = array_merge($info['options']['#default_value'], $value);
    $resource = $value['resource']['entity_type'];
    $bundles = $value['resource']['bundle'];
    $bundleEntityType = \Drupal::entityTypeManager()->getDefinition($resource)->getBundleEntityType();
    if (is_array($bundles)) {
      $value['filters'][] = "filter[bundles][condition][path]={$bundleEntityType}.meta.drupal_internal__target_id";
      $value['filters'][] = 'filter[bundles][condition][operator]=IN';
      foreach ($bundles as $key => $bundle) {
        $value['filters'][] = "filter[bundles][condition][value][{$key}]={$bundle}";
      }
    }
    $value['resource'] = $resource;
    $json_api_generator_service = \Drupal::service('vactory_decoupled.jsonapi.generator');
    $response = $json_api_generator_service->fetch($value);
    $cache = $response['cache'];
    unset($response['cache']);

    $cacheTags = Cache::mergeTags($cacheability->getCacheTags(), $cache['tags']);
    $cacheability->setCacheTags($cacheTags);
    $cacheContexts = Cache::mergeContexts($cacheability->getCacheContexts(), $cache['contexts']);
    $cacheability->setCacheContexts($cacheContexts);
    $value = $response;
  }
}
